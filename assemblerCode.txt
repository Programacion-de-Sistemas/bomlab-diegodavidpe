   0x000055555555560b <+0>:	endbr64 
=> 0x000055555555560f <+4>:	push   %rbp
   0x0000555555555610 <+5>:	push   %rbx
   0x0000555555555611 <+6>:	sub    $0x28,%rsp
   0x0000555555555615 <+10>:	mov    %fs:0x28,%rax
   0x000055555555561e <+19>:	mov    %rax,0x18(%rsp)
   0x0000555555555623 <+24>:	xor    %eax,%eax
   0x0000555555555625 <+26>:	mov    %rsp,%rsi
   0x0000555555555628 <+29>:	call   0x555555555c30 <read_six_numbers>
   0x000055555555562d <+34>:	cmpl   $0x0,(%rsp)
   0x0000555555555631 <+38>:	jne    0x55555555563a <phase_2+47>
   0x0000555555555633 <+40>:	cmpl   $0x1,0x4(%rsp)
   0x0000555555555638 <+45>:	je     0x55555555563f <phase_2+52>
   0x000055555555563a <+47>:	call   0x555555555c04 <explode_bomb>
   0x000055555555563f <+52>:	mov    %rsp,%rbx
   0x0000555555555642 <+55>:	lea    0x10(%rsp),%rbp
   0x0000555555555647 <+60>:	jmp    0x555555555652 <phase_2+71>
   0x0000555555555649 <+62>:	add    $0x4,%rbx
   0x000055555555564d <+66>:	cmp    %rbp,%rbx
   0x0000555555555650 <+69>:	je     0x555555555663 <phase_2+88>
   0x0000555555555652 <+71>:	mov    0x4(%rbx),%eax
   0x0000555555555655 <+74>:	add    (%rbx),%eax
   0x0000555555555657 <+76>:	cmp    %eax,0x8(%rbx)
   0x000055555555565a <+79>:	je     0x555555555649 <phase_2+62>
   0x000055555555565c <+81>:	call   0x555555555c04 <explode_bomb>
   0x0000555555555661 <+86>:	jmp    0x555555555649 <phase_2+62>
   0x0000555555555663 <+88>:	mov    0x18(%rsp),%rax
   0x0000555555555668 <+93>:	sub    %fs:0x28,%rax
   0x0000555555555671 <+102>:	jne    0x55555555567a <phase_2+111>
   0x0000555555555673 <+104>:	add    $0x28,%rsp
   0x0000555555555677 <+108>:	pop    %rbx
   0x0000555555555678 <+109>:	pop    %rbp
   0x0000555555555679 <+110>:	ret    
   0x000055555555567a <+111>:	call   0x555555555250 <__stack_chk_fail@plt>

